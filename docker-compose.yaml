version: '3.6'
services:

  db:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_DB: meeting
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
    ports:
      - "5432:5432"

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      DATABASE_HOST: "localhost"
      DATABASE_PORT: "5432"
      DATABASE_NAME: "postgres"
      DATABASE_USERNAME: "postgres"
      DATABASE_PASSWORD: "admin"
      DATABASE_POOL_SIZE: "10"
      APP_KAFKA_PRODUCER_TOPIC: "vote"
      KAFKA_BOOTSTRAP_SERVERS: "localhost:29092"
      KAFKA_CLIENT_ID: "meeting"
    depends_on:
      - db
      - kafka
    network_mode: host

  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.1
    container_name: zookeeper
    restart: unless-stopped
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    healthcheck:
      test: "echo stat | nc localhost $$ZOOKEEPER_CLIENT_PORT"
      start_period: 30s

  kafka:
    image: confluentinc/cp-kafka:5.5.1
    container_name: kafka
    restart: unless-stopped
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_DELETE_TOPIC_ENABLE: "true"
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "9092" ]
      start_period: 30s

